[{"/usr/app/src/index.js":"1","/usr/app/src/App.js":"2","/usr/app/src/reportWebVitals.js":"3","/usr/app/src/pages/TaskArchive/TaskArchive.js":"4","/usr/app/src/components/sidebar/Sidebar.js":"5","/usr/app/src/pages/TaskSingle/TaskSingle.js":"6","/usr/app/src/pages/Home/Home.js":"7","/usr/app/src/data/task.js":"8","/usr/app/src/components/task/TaskItem.js":"9"},{"size":637,"mtime":1646761172000,"results":"10","hashOfConfig":"11"},{"size":672,"mtime":1646858416000,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1646737636000,"results":"13","hashOfConfig":"11"},{"size":3148,"mtime":1647193963153,"results":"14","hashOfConfig":"11"},{"size":806,"mtime":1647023890000,"results":"15","hashOfConfig":"11"},{"size":1423,"mtime":1647023404000,"results":"16","hashOfConfig":"11"},{"size":310,"mtime":1647023406000,"results":"17","hashOfConfig":"11"},{"size":7989,"mtime":1647025380000,"results":"18","hashOfConfig":"11"},{"size":651,"mtime":1647026668000,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"8m2fx9",{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/usr/app/src/index.js",[],"/usr/app/src/App.js",["41"],"import './App.scss';\n\nimport {\n  BrowserRouter,\n  Routes,\n  Route,\n} from \"react-router-dom\";\nimport Sidebar from './components/sidebar/Sidebar';\nimport TaskArchive from './pages/TaskArchive/TaskArchive';\nimport TaskSingle from './pages/TaskSingle/TaskSingle';\nimport Home from './pages/Home/Home';\n\n\nfunction App() {\n  return (\n    <div className=\"App d-flex\">\n      <Sidebar />\n      <div className=\"content\">\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"task\" element={<TaskArchive />} />\n          <Route path=\"task/:taskId\" element={<TaskSingle />} />\n        </Routes>\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n","/usr/app/src/reportWebVitals.js",[],"/usr/app/src/pages/TaskArchive/TaskArchive.js",["42","43","44","45","46"],"import './TaskArchive.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport { jsonData } from '../../data/task';\r\nimport { useEffect, useState } from 'react';\r\nimport TaskItem from '../../components/task/TaskItem';\r\n\r\nexport default function TaskArchive() {\r\n\r\n    function getTaskByState(tasks , state) {\r\n        return tasks.filter(\r\n            function(tasks){ return tasks.state == state }\r\n        );\r\n      }\r\n    const [columnState, setcolumnState] = useState(['todo','progress','finished']);\r\n    const [todo, setTodo] = useState([]);\r\n    const [progress, setProgress] = useState([]);\r\n    const [finished, setFinished] = useState([]);\r\n\r\n     let addMoreColumn = () => {\r\n        console.log('AÃ±adir otra columna')\r\n    }\r\n    useEffect(() => {\r\n        setTodo(getTaskByState(jsonData, 'todo'));\r\n        setProgress(getTaskByState(jsonData, 'progress'));\r\n        setFinished(getTaskByState(jsonData, 'finished'));\r\n        console.log(finished);\r\n    }, [])\r\n  return (\r\n    <div className=\"container-fluid\">\r\n        <div className=\"row pageHeader\">\r\n            <h1 className=\"pageHeader__title\">Project Name</h1>\r\n        </div>\r\n        <div className=\"row pageContent\">\r\n            <div id=\"board\" className=\"TaskArchive__content d-flex\">\r\n                <div className=\"TaskArchive__content--column d-flex flex-direction-column\">\r\n                    <div className=\"TaskArchive__content--columnHeader text-center\">\r\n                        <h3> To do </h3>\r\n                    </div>\r\n                    <div className=\"TaskArchive__content--columnContent\">\r\n                        {\r\n                            todo && todo?.map((item, i) => <TaskItem item={item} key={item.id} />)\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className=\"TaskArchive__content--column d-flex flex-direction-column\">\r\n                    <div className=\"TaskArchive__content--columnHeader text-center\">\r\n                        <h3> In progress </h3>\r\n                    </div>\r\n                    <div className=\"TaskArchive__content--columnContent\">\r\n\r\n                        {\r\n                            progress && progress.map((item, i) => <TaskItem item={item} key={item.id} />)\r\n                        }\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"TaskArchive__content--column d-flex flex-direction-column\">\r\n                    <div className=\"TaskArchive__content--columnHeader text-center\">\r\n                        <h3> Finished </h3>\r\n                    </div>\r\n                    <div className=\"TaskArchive__content--columnContent\">\r\n\r\n                        {\r\n                            finished && finished.map((item, i) => <TaskItem item={item} key={item.id} />)\r\n                        }\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"TaskArchive__content--column d-flex flex-direction-column addMore\">\r\n                    <button onClick={() => addMoreColumn()}>Add more..</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n","/usr/app/src/components/sidebar/Sidebar.js",["47"],"import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport './Sidebar.scss';\r\n\r\n\r\nexport default function Sidebar() {\r\n\treturn (\r\n\t\t<div className=\"sidebar\">\r\n\t\t\t<div className=\"sidebar__header mb-5\">\r\n\t\t\t\t<img className=\"w-100\" src=\"//images.vexels.com/media/users/3/213584/isolated/preview/675578f563d891666409fcb819334bb1-tocino-cara-amigable-dibujado-a-mano.png\" />\r\n\t\t\t</div>\r\n\t\t\t<div className=\"sidebar__menu my-5\">\r\n\t\t\t\t<ul className=\"list-group\">\r\n\t\t\t\t\t<li className=\"list-group-item active\" aria-current=\"true\">\r\n\t\t\t\t\t\t<Link to=\"/\">Home</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li className=\"list-group-item\">\r\n\t\t\t\t\t\t<Link to=\"/task\">Task</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li className=\"list-group-item\">\r\n\t\t\t\t\t\t<Link to=\"/task/id\">Task single</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n","/usr/app/src/pages/TaskSingle/TaskSingle.js",[],"/usr/app/src/pages/Home/Home.js",[],"/usr/app/src/data/task.js",[],"/usr/app/src/components/task/TaskItem.js",[],{"ruleId":"48","severity":1,"message":"49","line":4,"column":3,"nodeType":"50","messageId":"51","endLine":4,"endColumn":16},{"ruleId":"48","severity":1,"message":"52","line":2,"column":10,"nodeType":"50","messageId":"51","endLine":2,"endColumn":14},{"ruleId":"53","severity":1,"message":"54","line":11,"column":49,"nodeType":"55","messageId":"56","endLine":11,"endColumn":51},{"ruleId":"48","severity":1,"message":"57","line":14,"column":12,"nodeType":"50","messageId":"51","endLine":14,"endColumn":23},{"ruleId":"48","severity":1,"message":"58","line":14,"column":25,"nodeType":"50","messageId":"51","endLine":14,"endColumn":39},{"ruleId":"59","severity":1,"message":"60","line":27,"column":8,"nodeType":"61","endLine":27,"endColumn":10,"suggestions":"62"},{"ruleId":"63","severity":1,"message":"64","line":10,"column":5,"nodeType":"65","endLine":10,"endColumn":168},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'columnState' is assigned a value but never used.","'setcolumnState' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'finished'. Either include it or remove the dependency array.","ArrayExpression",["66"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"desc":"67","fix":"68"},"Update the dependencies array to be: [finished]",{"range":"69","text":"70"},[972,974],"[finished]"]